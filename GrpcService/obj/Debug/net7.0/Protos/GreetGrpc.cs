// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.RegisterRequest> __Marshaller_greet_RegisterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.RegisterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.RegisterReply> __Marshaller_greet_RegisterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.RegisterReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.SignInRequest> __Marshaller_greet_SignInRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.SignInRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.SignInReply> __Marshaller_greet_SignInReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.SignInReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.CreateGroupRequest> __Marshaller_greet_CreateGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.CreateGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.AcceptIvteReply> __Marshaller_greet_AcceptIvteReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.AcceptIvteReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.ClientDownData> __Marshaller_greet_ClientDownData = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.ClientDownData.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.SendDataOfGroup> __Marshaller_greet_SendDataOfGroup = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.SendDataOfGroup.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.ClientSendMess> __Marshaller_greet_ClientSendMess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.ClientSendMess.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.ServerReplyMess> __Marshaller_greet_ServerReplyMess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.ServerReplyMess.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.ClientDownDataNess> __Marshaller_greet_ClientDownDataNess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.ClientDownDataNess.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.SendDataOfGroupMess> __Marshaller_greet_SendDataOfGroupMess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.SendDataOfGroupMess.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.ServerReply> __Marshaller_greet_ServerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.ServerReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.ClientRecieve> __Marshaller_greet_ClientRecieve = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.ClientRecieve.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.RegisterRequest, global::GrpcService.RegisterReply> __Method_Register = new grpc::Method<global::GrpcService.RegisterRequest, global::GrpcService.RegisterReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Register",
        __Marshaller_greet_RegisterRequest,
        __Marshaller_greet_RegisterReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.SignInRequest, global::GrpcService.SignInReply> __Method_SignIn = new grpc::Method<global::GrpcService.SignInRequest, global::GrpcService.SignInReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SignIn",
        __Marshaller_greet_SignInRequest,
        __Marshaller_greet_SignInReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.CreateGroupRequest, global::GrpcService.AcceptIvteReply> __Method_CreateGroup = new grpc::Method<global::GrpcService.CreateGroupRequest, global::GrpcService.AcceptIvteReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGroup",
        __Marshaller_greet_CreateGroupRequest,
        __Marshaller_greet_AcceptIvteReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.ClientDownData, global::GrpcService.SendDataOfGroup> __Method_ServerSendDataOfGroup = new grpc::Method<global::GrpcService.ClientDownData, global::GrpcService.SendDataOfGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServerSendDataOfGroup",
        __Marshaller_greet_ClientDownData,
        __Marshaller_greet_SendDataOfGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.ClientSendMess, global::GrpcService.ServerReplyMess> __Method_SendMail = new grpc::Method<global::GrpcService.ClientSendMess, global::GrpcService.ServerReplyMess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendMail",
        __Marshaller_greet_ClientSendMess,
        __Marshaller_greet_ServerReplyMess);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.ClientDownDataNess, global::GrpcService.SendDataOfGroupMess> __Method_ServerSendDataMess = new grpc::Method<global::GrpcService.ClientDownDataNess, global::GrpcService.SendDataOfGroupMess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServerSendDataMess",
        __Marshaller_greet_ClientDownDataNess,
        __Marshaller_greet_SendDataOfGroupMess);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.ServerReply, global::GrpcService.ClientRecieve> __Method_ServerReplyAll = new grpc::Method<global::GrpcService.ServerReply, global::GrpcService.ClientRecieve>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServerReplyAll",
        __Marshaller_greet_ServerReply,
        __Marshaller_greet_ClientRecieve);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.RegisterReply> Register(global::GrpcService.RegisterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.SignInReply> SignIn(global::GrpcService.SignInRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.AcceptIvteReply> CreateGroup(global::GrpcService.CreateGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.SendDataOfGroup> ServerSendDataOfGroup(global::GrpcService.ClientDownData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.ServerReplyMess> SendMail(global::GrpcService.ClientSendMess request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.SendDataOfGroupMess> ServerSendDataMess(global::GrpcService.ClientDownDataNess request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.ClientRecieve> ServerReplyAll(global::GrpcService.ServerReply request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Register, serviceImpl.Register)
          .AddMethod(__Method_SignIn, serviceImpl.SignIn)
          .AddMethod(__Method_CreateGroup, serviceImpl.CreateGroup)
          .AddMethod(__Method_ServerSendDataOfGroup, serviceImpl.ServerSendDataOfGroup)
          .AddMethod(__Method_SendMail, serviceImpl.SendMail)
          .AddMethod(__Method_ServerSendDataMess, serviceImpl.ServerSendDataMess)
          .AddMethod(__Method_ServerReplyAll, serviceImpl.ServerReplyAll).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Register, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.RegisterRequest, global::GrpcService.RegisterReply>(serviceImpl.Register));
      serviceBinder.AddMethod(__Method_SignIn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.SignInRequest, global::GrpcService.SignInReply>(serviceImpl.SignIn));
      serviceBinder.AddMethod(__Method_CreateGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.CreateGroupRequest, global::GrpcService.AcceptIvteReply>(serviceImpl.CreateGroup));
      serviceBinder.AddMethod(__Method_ServerSendDataOfGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.ClientDownData, global::GrpcService.SendDataOfGroup>(serviceImpl.ServerSendDataOfGroup));
      serviceBinder.AddMethod(__Method_SendMail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.ClientSendMess, global::GrpcService.ServerReplyMess>(serviceImpl.SendMail));
      serviceBinder.AddMethod(__Method_ServerSendDataMess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.ClientDownDataNess, global::GrpcService.SendDataOfGroupMess>(serviceImpl.ServerSendDataMess));
      serviceBinder.AddMethod(__Method_ServerReplyAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.ServerReply, global::GrpcService.ClientRecieve>(serviceImpl.ServerReplyAll));
    }

  }
}
#endregion
